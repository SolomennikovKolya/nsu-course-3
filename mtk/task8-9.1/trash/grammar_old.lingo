// expr = ws term:e1 ws '+' ws expr:e2 { Sum(:e1, :e2) } | ws term;
// term = ws factor:e1 ws '*' ws term:e2 { Mul(:e1, :e2) } | ws factor;
// factor = ws digit+$d { Int(s2i($d)) } | ws '(' expr:e ')' { Paren(:e) };

// digit = '0'-'9';
// ws = s*;
// s = " " | "\t" | "\n";

// exp = ws secondpriority:e ws {:e};

// secondpriority = firstpriority:e1 subtrahend*:es ws '+' ws secondpriority:e2 {Add(buildSub(:e1, :es),:e2)} |
//                  firstpriority:e1 subtrahend*:es {buildSub(:e1, :es)};
// firstpriority = term:e1 divisor*:es ws '*' ws firstpriority:e2 {Mul(buildDiv(:e1, :es),:e2)} | 
//                 term:e1 divisor*:es {buildDiv(:e1, :es)};

// divisor = ws '/' ws term:e {:e};
// subtrahend = ws '-' ws firstpriority:e {:e};

// term = '+'? int:e {:e} |
//        '-' int:e {Neg(:e)} |
//        '+'? var:e {:e} |
//        '-' var:e {Neg(:e)} |
//        '+'? '(' exp:e ')' {:e} |
//        '-(' exp:e ')' {Neg(:e)};

// int = digit+$d {Int(s2i($d))};
// var = (letter (letter | digit)*)$n {Var(:n)};

// letter = 'a' - 'z' | 'A' - 'Z';
// digit = '0'-'9';
// ws = s*;
// s = " " | "\t" | "\n";

// expr = ws term:e1 ws '+' ws expr:e2 { Sum(:e1, :e2) } | ws term:e1 ws '-' ws expr:e2 { buildSub(:e1, :e2) } | ws term;
// term = ws factor:e1 ws '*' ws term:e2 { Mul(:e1, :e2) } | ws factor:e1 ws '/' ws term:e2 { buildDiv(:e1, :es) } | ws factor;
// factor = ws int | ws var | ws '(' expr:e ')' { Paren(:e) };

// int = digit+$d { Int(s2i($d)) };
// var = (letter (letter | digit)*)$n { Var(:n) };

// letter = 'a' - 'z' | 'A' - 'Z';
// digit = '0'-'9';
// ws = s*;
// s = " " | "\t" | "\n";

exp = ws sum:e ws {:e};

sum = mul:e1 ws '+' ws sum:e2 {Add(:e1,:e2)} | mul:e {:e};
mul = div:e1 ws '*' ws mul:e2 {Mul(:e1,:e2)} | div:e1 ws '/' ws mul:e2 {Div(:e1, :e2)} | div:e {:e};
div = pow:e1 | '(' exp:e ')' {:e}; 
pow = factor:e1 ws '^' ws pow:e2 {Pow(:e1, :e2)} | factor:e {:e};
factor = double:e {:e} | int:e {:e} | var:e {:e} | '(' exp:e ')' {:e}; 

var = (letter (letter | digit)*)$n { Var(:n) };
double = digit+$d '.' digit+$d {Double(s2d($d))};
int = digit+$d {Int(s2i($d))};

letter = 'a' - 'z' | 'A' - 'Z';
digit = '0' - '9';
ws = s*;
s = " " | "\t" | "\n";
